library(readxl)
hprice <- read_excel("R:/HO-231-Rosangela/Dados/hprice.xlsx")
View(hprice)
reg1=lm(PRICE ~LOTSIZE + SQRFT + BDRMS, data=hprice)
summary(reg1)
#Teste de Breuch-Pagan
install.packages('lmtest')
library(lmtest)
bptest(reg1)
#Estatísticas robustas
install.packages('car')
library(car)
install.packages('stargazer')
library(stargazer)
stargazer(coeftest(reg1),coeftest(reg1,vcov=hccm(reg1,type='hc0')),
digits=8,column.labels = c('Usual','Robusta'),type='text',
out='robusta.txt',data=hprice)
#Log dos resíduos
lresiduos=log(residuos)
#Regressão do log(res) em função das variáveis independentes
auxiliar=lm(lresiduos ~ LOTSIZE + SQRFT + BDRMS, data=hprice)
summary(auxiliar)
#Mínimos Quadrados Generalizados
#Obter os resíduos
residuos=(reg1$residuals)^2
#Log dos resíduos
lresiduos=log(residuos)
#Regressão do log(res) em função das variáveis independentes
auxiliar=lm(lresiduos ~ LOTSIZE + SQRFT + BDRMS, data=hprice)
summary(auxiliar)
#Valores estimados da regressão auxiliar
g=auxiliar$fitted.values
#Fator de ponderação
h=exp(g)
stargazer(coeftest(reg1),coeftest(reg1,vcov=hccm(reg1,type='hc0')),
coeftest(modeloMQG),digits=8,
column.labels = c('MQO','Robusta','MQG-factível'),
type='text',out='saida.txt',data=hprice)
#Estimativas por MQP (MQG ou MQG factível)
modeloMQG=lm(PRICE ~LOTSIZE + SQRFT + BDRMS,weights = 1/h,data=hprice)
stargazer(coeftest(reg1),coeftest(reg1,vcov=hccm(reg1,type='hc0')),
coeftest(modeloMQG),digits=8,
column.labels = c('MQO','Robusta','MQG-factível'),
type='text',out='saida.txt',data=hprice)
stargazer(coeftest(reg1),coeftest(reg1,vcov=hccm(reg1,type='hc0')),
coeftest(modeloMQG),
coeftest(modeloMQG,vcov=hccm(reg1,type='hc0')),
digits=8,
column.labels = c('MQO','Robusta','MQG-factível',
'MQG Robusto'),
type='text',out='saida.txt',data=hprice)
stargazer(coeftest(reg1),coeftest(reg1,vcov=hccm(reg1,type='hc0')),
coeftest(modeloMQG),
coeftest(modeloMQG,vcov=hccm(modeloMQG,type='hc0')),
digits=8,
column.labels = c('MQO','Robusta','MQG-factível',
'MQG Robusto'),
type='text',out='saida.txt',data=hprice)
rm=ls()
rm=ls(all.names=TRUE)
rm(list=ls(all.names=TRUE))
library(readxl)
INTDEF <- read_excel("R:/HO-231-Rosangela/Dados/INTDEF.xlsx")
View(INTDEF)
#Leitura de Dados INTDEF.xlsx
Dados=ts(INTDEF,start=1948,freq=1)
layout(1:3)
plot(Dados[,2],xlab='Ano',ylab='Taxa de Juros - I3')
plot(Dados[,2],xlab='Ano',ylab='Taxa de Juros - I3')
plot(Dados[,3],xlab='Ano',ylab='Taxa de Inflação - INF')
plot(Dados[,4],xlab='Ano',ylab='Déficit - DEF')
layout(1:3)
plot(Dados[,2],xlab='Ano',ylab='Taxa de Juros - I3')
plot(Dados[,3],xlab='Ano',ylab='Taxa de Inflação - INF')
plot(Dados[,4],xlab='Ano',ylab='Déficit - DEF')
#Modelo de regressão
modelo1=lm(I3~INF + DEF, data=Dados)
summary(modelo1)
summary(modelo1)
anova(modelo1)
library(car)
linearHypothesis(modelo1,'INF=0')
##########################
#Exemplo 2
rm(list=ls(all.names=TRUE))
library(readxl)
FERTIL3 <- read_excel("R:/HO-231-Rosangela/Dados/FERTIL3.xlsx")
View(FERTIL3)
layout(1:2)
#Leitura dos dados FERTIL3.xlsx
Dados=ts(FERTIL3,start=1913,freq=1)
plot(Dados[,2],xlab='Ano',ylab='GRF')
plot(Dados[,3],xlab='Ano',ylab='PE')
View(Dados)
#Variáveis Binárias
ww2=ts(as.numeric((Dados$YEAR>=1941) & (Dados$YEAR<=1945)))
year=FERTIL3[,1]
#Variáveis Binárias
ww2=ts(as.numeric((year >=1941) & (year<=1945)))
pill=ts(as.numeric(year>=1963))
dados=cbind(Dados,ww2)
dados=cbind(Dados,ww2)
dados=cbind(dados,pill)
View(dados)
dados=cbind(FERTIL3,ww2)
dados=cbind(FERTIL3,pill)
View(dados)
View(dados)
dados=cbind(FERTIL3,ww2)
dados=cbind(dados,pill)
View(dados)
dados=cbind(FERTIL3,ww2)
Dados1=cbind(dados,pill)
View(Dados1)
dados=cbind(FERTIL3,ww2)
View(dados)
View(dados)
View(ww2)
#Modelo de regressão
modelo2=lm(GFR~PE + ww2+ pill,data=Dados)
summary(modelo2)
summary(modelo2)
View(ww2)
summary(modelo2)
q()
library(readxl)
Phillips <- read_excel("R:/HO-231-Rosangela/Dados/Phillips.xlsx")
View(Phillips)
dados=ts(Phillips[,2:3],start=1948,freq=1)
layout(1:2)
plot(dados[,1],xlab='anos',ylab='inflação')
plot(dados[,2],xlab='anos',ylab='Desemprego')
install.packages('lmtest')
library(lmtest)
install.packages('dynlm')
library(dynlm)
reg1 = lm(INF~UNEM,data=dados)
summary(reg1)
#análise gráfica
res1=resid(reg1)
layout(1:2)
plot.ts(res1)
n=length(res1)
plot(res1[1:(n-1)],res1[2:n])
#teste de homocedasticidade
bptest(reg1)
#teste de homocedasticidade
bptest(reg1)
#Teste AR(1)
mod=lm(res1[2:n]~res1[1:(n-1)])
summary(mod)
#teste de Durbin-Watson
dwtest(reg1)
cor(res1[1:(n-1)],res1[2:n])
#teste de Durbin-Watson
dwtest(reg1)
cor(res1[1:(n-1)],res1[2:n])
#Modelo de Philpis expectativas aumentadas
reg.ea = dynlm(d(INF)~UNEM,data=dados)
summary(reg.ea)
#Taxa natural
tn=reg.ea$coef[1]/(-reg.ea$coef[2])
tn
tn
residual.ea=resid(reg.ea)
coeftest(dynlm(residual.ea~L(residual.ea)))
#Modelo de Philpis expectativas aumentadas
reg.ea = dynlm(d(INF)~UNEM,data=dados)
summary(reg.ea)
library(readxl)
PRMINWGE <- read_excel("R:/HO-231-Rosangela/Dados/PRMINWGE.xlsx")
View(PRMINWGE)
dados=ts(PRMINWGE,start=1950,freq=1)
trend=ts(1:nrow(dados))
reg = lm(log(PREPOP)~log(MINCOV)+ log(USGNP)+log(PRGNP)+trend,data=dados)
summary(reg)
reg = lm(log(PREPOP)~log(MINCOV)+ log(USGNP)+log(PRGNP)+trend,data=dados)
summary(reg)
#Análise dos resíduos
res1=resid(reg)
n=nrow(res1)
layout(1:2)
plot.ts(res1)
plot(res1[1:(n-1)],res1[2:n])
n=nrow(res1)
n
n=nrow(dados)
n
layout(1:2)
plot.ts(res1)
plot(res1[1:(n-1)],res1[2:n])
#Teste de Homocedasticidade
bptest(reg)
library(lmtest)
coeftest(reg,vcov= hccm(reg.type='hc0'))
coeftest(reg,vcov= hccm(reg,type='hc0'))
library(lmtest)
coeftest(reg,vcov= hccm(reg,type='hc0'))
install.packages('car')
install.packages("car")
library(car)
coeftest(reg,vcov= hccm(reg,type='hc0'))
library(stargazer)
stargazer(coeftest(reg),coeftest(reg,vcov= hccm(reg,type='hc0')),
digits=5),column.labels=c('Usual','Robusto')
stargazer(coeftest(reg),coeftest(reg,vcov= hccm(reg,type='hc0')),
digits=5,column.labels=c('Usual','Robusto'))
stargazer(coeftest(reg),coeftest(reg,vcov= hccm(reg,type='hc0')),
digits=5,column.labels=c('Usual','Robusto'),type='text')
coeftest(reg,vcov= hccm(reg,type='hc0'))
#teste de Correlação de Breuch-Godfrey
acf(res1)
pacf(res1)
bgtest(reg,order=1)
bgtest(reg,order=1)
bgtest(reg,order=1)
#Estatísticas robustas
install.packages('sandwich')
library(sandwich)
stargazer(coeftest(reg),coeftest(reg,vcovHAC),
digits=5,column.labels=c('Usual','Robusto'),type='text')
#Correção de CO
install.packages('oucutt')
library(orcutt)
#Correção de CO
install.packages('orcutt')
library(orcutt)
coch=cochrane.orcutt(reg)
coch
summary(coch)
#Correção PW
install.packages('prais')
library(prais)
pw=prais_winsten(reg)
summary((reg))
summary(reg)
pw=prais_winsten(reg)
summary(reg)
pw
pw=prais_winsten(reg)
summary(pw)
q()
q()
