knitr::opts_chunk$set(echo = TRUE, message = FALSE,
fig.width = 10, fig.height = 6)
pib_fr <- read_excel("~/Videos/Unicamp_IE 2019/HO:236A Times Series/Ativ 1/Ativ 2/France.xlsx")
library(readxl)      # Pour lire les données xlsx (données sur Excel)
pib_fr <- read_excel("~/Videos/Unicamp_IE 2019/HO:236A Times Series/Ativ 1/Ativ 2/France.xlsx")
head(pib_fr)
q()
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
fig.width = 12, fig.height = 8)
library(fPortfolio)
library(fPortfolio)
library(fAssets)
library(timeDate)
library(fCopulae)
library(fCopulae)
library(fCopulae)
library(robustbase)
library(Rglpk)
library(setSolver)
install.packages("Rglpk", dependencies=TRUE)
install.packages("GLPK")
install.packages("Glpk")
data(MultiAsset)
data("MultiAsset")
q()
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
fig.width = 10, fig.height = 6)
library(strucchange) # Pour le test de rupture structuralle
library(forecast)    # Pour ajuster et faire la prévision du modèle ARIMA
library(lmtest)      # Pour les tests d'hypothès de normalité
library(FinTS)       # Pour tester l'hypothèse d'hétérocédasticité
library(urca)        # Pour réaliser le test de racines unitaires (KPSS, ERS,...)
library(tseries)     # Pour les tests de normalité
library(TSA)         # Pour les tests de l'opérateur de retard (lags)
library(TSA)         # Pour les tests de l'opérateur de retard (lags)
library(readxl)      # Pour lire les données xlsx (données sur Excel)
pib_fr <- read_excel("~/Videos/Unicamp_IE 2019/HO:236A Times Series/Ativ 1/Ativ 2/France.xlsx")
lpib <- log(pib)
pib = ts(pib_fr[,2], start = c(1960, 1), frequency = 1)
lpib <- log(pib)
stationary.test(lpib, method = c("adf", "pp", "kpss"), nlag = NULL,
type = c("Z_rho", "Z_tau"), lag.short = TRUE, output = TRUE)
?stationary.test
??stationary.test
library(stationery)
q()
