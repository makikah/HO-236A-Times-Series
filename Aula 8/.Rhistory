knitr::opts_chunk$set(echo = TRUE)
library(forecast) # Para ajuste e previsão do modelo ARIMA
library(lmtest) # Por test de hipótese
library(FinTS) # Para o test de heterocedasticidade
library(urca) # Por test de Raiz Unitária
library(tseries) # Para fazer o test de normalidade
library(TSA) # Test
library(readxl)
ibc <- read_excel("~/Videos/Unicamp_IE 2019/HO:236A Times Series/Aula 8/IBC_BR.xlsx")
IBC_BRA <- read_excel("~/Videos/Unicamp_IE 2019/HO:236A Times Series/Aula 8/IBC_BR.xlsx")
ibc = ts(IBC_BRA[,2], start = c(2003, 1), frequency = 12)
plot(ibc, main = "Indice d'activité économique", ylab = "IBC_BRA",
xlab = "Mois")
grid()
plot(ibc, main = "Indice d'activité économique", ylab = "IBC_BRA",
xlab = "Mois")
par(mfrow = c(2, 1))
plot(ibc, main = "Indice d'activité économique", ylab = "IBC_BRA",
xlab = "Mois")
par(mfrow = c(1, 2))
plot(ibc, main = "Indice d'activité économique", ylab = "IBC_BRA",
xlab = "Mois")
par(mfrow = c(2, 1))
plot(ibc, main = "Indice d'activité économique", ylab = "IBC_BRA",
xlab = "Mois")
acf(ibc, lag.max = 20, drop.lag.0 = TRUE)
df1 <- ur.df(ibc, type = "trend", lags = 12)
plot(df1)
df10 = ur.df(ibc, type = "trend", lags = 12, selectlags = "BIC")
plot(df10)
summary(df1)
summary(df10)
df2 = ur.df(ibc, type = "drift", lags = 12, selectlags = "BIC")
plot(df2)
summary(df2)
par(mfrow = c(1, 2))
acf(ibc, type = "correlation", lag.max = 20, drop.lag.0 = TRUE)
acf(ibc, type = "partial", lag.max = 20, drop.lag.0 = TRUE)
model1 = Arima(ibc, order = c(1, 0, 0))
model1 = Arima(ibc, order = c(1, 0, 0), method = "ML")
summary(model1)
model2 <- Arima(ibc, order = c(1, 0, 1), method = "ML")
summary(model2)
fit1 = coeftest(model1)
print(fit1)
fit2 <- coeftest(model2)
summary(fit2)
print(fit2)
par(mfrow = c(2, 1))
acf(model1$residuals, drop.lag.0 = TRUE)
acf(model2$residuals, drop.lag.0 = TRUE)
Box.test(model1$residuals, lag = 4, type = "Box-Pierce", fitdf = 1)
Box.test(model1$residuals, lag = 8, type = "Box-Pierce", fitdf = 1)
Box.test(model1$residuals, lag = 12, type = "Box-Pierce", fitdf = 1)
Box.test(model1$residuals, lag = 4, type = "Ljung-Box", fitdf = 1)
Box.test(model1$residuals, lag = 8, type = "Ljung-Box", fitdf = 1)
Box.test(model1$residuals, lag = 12, type = "Ljung-Box", fitdf = 1)
tsdiag(model1, gof.lag = 20)
Box.test(model2$residuals, lag = 4, type = "Ljung-Box", fitdf = 2)
Box.test(model2$residuals, lag = 8, type = "Ljung-Box", fitdf = 2)
Box.test(model2$residuals, lag = 12, type = "Ljung-Box", fitdf = 2)
tsdiag(model2, gof.lag = 20)
par(mfrow = c(1, 2))
hist(model1$residuals)
plot(density(model1$residuals, kernel = "gaussian"))
jarque.bera.test(model1$residuals)
shapiro.test(model1$residuals)
ArchTest(model1$residuals, lags = 4)
ArchTest(model1$residuals, lags = 8)
ArchTest(model1$residuals, lags = 12)
ArchTest(model2$residuals, lag = 4)
ArchTest(model2$residuals, lag = 8)
ArchTest(model2$residuals, lag = 12)
lambda <- BoxCox.lambda(ibc)
print(lambda)
model3 <- Arima(ibc, order = c(1, 0, 0), method = "ML", lambda = lambda)
summary(model3)
model4 <- Arima(ibc, order = c(1, 0, 1), method = "ML", lambda = lambda)
summary(model4)
fit3 <- coeftest(model3)
print(fit3)
fit4 <- coeftest(model4)
print(fit4)
tsdiag(model3, gof.lag = 20)
tsdiag(model4, gof.lag = 20)
par(mfrow <- c(1, 2))
par(mfrow = c(1, 2))
hist(model3$residuals)
plot(density(model3$residuals, kernel = "gaussian"))
jarque.bera.test(model3)
jarque.bera.test(model3$residuals)
shapiro.test(model3$residuals)
par(mfrow = c(2,1))
hist(model4$residuals)
plot(density(model4$residuals, kernel = "gaussian"))
jarque.bera.test(model4$residuals)
shapiro.test(model4$residuals)
ArchTest(model4$residuals, lag = 4)
ArchTest(model4$residuals, lag = 8)
ArchTest(model4$residuals, lag = 12)
ArchTest(model3$residuals, lag = 4)
ArchTest(model3$residuals, lag = 8)
ArchTest(model3$residuals, lag = 12)
ArchTest(model4$residuals, lag = 4)
ArchTest(model4$residuals, lag = 8)
ArchTest(model4$residuals, lag = 12)
AIC(model3, model4)
BIC(model3, model4)
prev = forecast(model4, h = 6, level = c(0.90, 0.95), lambda = lambda,
biasadj = FALSE)
print(prev)
par(mfrow = c(1, 1))
plot(prev)
df10 = ur.df(ibc, type = "trend", lags = 12, selectlags = "BIC")
plot(df10)
summary(df10)
q()
q()
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
library(forecast) # Para ajuste e previsão do modelo ARIMA
library(forecast) # Para ajuste e previsão do modelo ARIMA
library(lmtest) # Por test de hipótese
library(FinTS) # Para o test de heterocedasticidade
library(urca) # Por test de Raiz Unitária
library(tseries) # Para fazer o test de normalidade
library(TSA) # Test de lag
library(TSA) # Test de lag
library(readxl)
ibc_bra = read_excel(~/Videos/Unicamp_IE 2019/HO:236A Times Series/Aula 8/IBC_BR.xlsx)
ibc_bra = read_excel("~/Videos/Unicamp_IE 2019/HO:236A Times Series/Aula 8/IBC_BR.xlsx")
ibc = ts(IBC_BRA[,2], start = c(2003, 1), frequency = 12)
ibc = ts(ibc_bra[,2], start = c(2003, 1), frequency = 12)
layout(1:2) # par(mfrow = c(2, 1))
plot(ibc, main = "Indice de Atividade Econômica", xlab = "Mês/Ano",
ylab = "IBC-BR")
plot(ibc, main = "Indice de Atividade Econômica", xlab = "Mês/Ano",
ylab = "IBC-BR")
acf(ibc, lag.max = 36, drop.lag.0 = TRUE, type = "correlation",
xlab = "lags", ylab = "FAC")
za.ibc = ur.za(ibc, model = "trend")
summary(za.ibc)
plot(za.ibc)
df.ibc = ur.df(ibc, type = "trend", lags = 0)
plot(df.ibc)
adf.ibc = ur.df(ibc, type = "trend", lags = 12, selectlags = "BIC")
plot(adf.ibc)
summary(adf.ibc)
adf.ibc2 = ur.df(ibc, type = "drift", lags = 12, selectlags = "BIC")
plot(adf.ibc2)
summary(adf.ibc2)
adf.ibc3 = ur.df(ibc, type = "drift", lags = 12, selectlags = "BIC")
plot(adf.ibc3)
summary(adf.ibc3)
adf.ibc3 = ur.df(ibc, type = "none", lags = 12, selectlags = "BIC")
plot(adf.ibc3)
summary(adf.ibc3)
pp.ibc = ur.pp(ibc, type = "Z-tau", model = "trend", lags = "short")
summary(pp.ibc)
plot(pp.ibc)
pp.ibc1 = ur.pp(ibc, type = "Z-tau", model = "constant", lags = "short")
plot(pp.ibc1)
summary(pp.ibc1)
ers.ibc = ur.ers(ibc, type = "DF-GLS", model = "trend", lag.max = 2)
summary(ers.ibc)
plot(ers.ibc)
?ers
??ers
kpss.ibc = ur.kpss(ibc, type = "tau", lags = "short")
plot(kpss.ibc)
kpss.ibc1 = ur.kpss(ibc, type = "mu", lags = "short")
plot(kpss.ibc1)
plot(diff(ibc))
acf(diff(ibc), drop.lag.0 = TRUE, type = "correlation")
acf(diff(ibc), type = "partial")
layout(1:1)
acf(diff(ibc), drop.lag.0 = TRUE, type = "correlation")
acf(diff(ibc), type = "partial")
plot(diff(ibc))
model1 = Arima(ibc, order = c(2, 1, 0))
model2 = Arima(ibc, order = c(0, 1, 2))
model3 = Arima(ibc, order = c(2, 1, 2))
model4 = Arima(ibc, order = c(1, 1, 1))
coeftest(model1)
coeftest(model2)
coeftest(model3)
coeftest(model4)
acf(model1$residuals, drop.lag.0 = TRUE)
Box.test(model1$residuals, lag = 14, type = "Ljung-Box")
for (i in 1:14) {
b = Box.test(model1$residuals, i, type = "Ljung-Box")$p.value
}
for (i in 1:14) {
b = Box.test(model1$residuals, i, type = "Ljung-Box")$p.value
print(b)
}
tsdiag(model1, gof.lag = 14)
par(mfrow = c(1:2))
hist(model1$residuals)
plot(density(model1$residuals, kernel = "gaussian"))
shapiro.test(model1$residuals)
jarque.bera.test(model1$residuals)
ArchTest(model1$residuals, lags = 4)
ArchTest(model1$residuals, lags = 12)
prev = forecast(model1, h = 12, level = c(0.90), lambda = 0, biasadj = FALSE)
print(prev)
plot(prev)
plot(prev)
layout(1:1)
prev = forecast(model1, h = 12, level = c(0.90), lambda = 0, biasadj = FALSE)
print(prev)
plot(prev)
erro1 = matrix(NA, nrow = length(window(ibc, start = 2016)), ncol = 1)
errop = matrix(NA, nrow = length(window(ibc, start = 2016)), ncol = 1)
real = matrix(NA, nrow = length(window(ibc, start = 2016)), ncol = 1)
previsto = matrix(NA, nrow = length(window(ibc, start = 2016)), ncol = 1)
y = BoxCox(ibc, lambda = 0)
q()
